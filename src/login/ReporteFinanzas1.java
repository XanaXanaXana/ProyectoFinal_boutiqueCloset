/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package login;

import conexion.ConexionBD;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

public class ReporteFinanzas1 extends javax.swing.JFrame {

    public ReporteFinanzas1() {
        initComponents();
        setLocationRelativeTo(null);
        panelGrafica.setLayout(new BorderLayout());
        cargarAnios();

        if (cmbAnios.getItemCount() > 0) {
            cmbAnios.setSelectedIndex(0);
            mostrarGrafica();
        }

        cmbAnios.addItemListener(e -> {
            if (e.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                mostrarGrafica();
            }
        });
    }

    private void mostrarGrafica() {
        String anioSeleccionado = (String) cmbAnios.getSelectedItem();
        if (anioSeleccionado == null || anioSeleccionado.isEmpty()) return;

        DefaultCategoryDataset dataset = obtenerDatosFinancieros(anioSeleccionado);
        System.out.println("Datos en dataset: " + dataset.getRowCount());

        JFreeChart grafica = ChartFactory.createLineChart(
            "Ingresos por Mes en " + anioSeleccionado,
            "Mes", "Ingresos ($)", dataset
        );

        ChartPanel chartPanel = new ChartPanel(grafica);
        chartPanel.setPreferredSize(new java.awt.Dimension(500, 300));

        panelGrafica.removeAll();
        panelGrafica.add(chartPanel, BorderLayout.CENTER);
        panelGrafica.revalidate();
        panelGrafica.repaint();

        double total = obtenerTotalGeneral(anioSeleccionado);
        lblTotalIngresos.setText("Total Ingresos: $" + String.format("%.2f", total));
    }

    private DefaultCategoryDataset obtenerDatosFinancieros(String anioSeleccionado) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        try (Connection conn = ConexionBD.getConexion()) {
            String sql = "SELECT TO_CHAR(fecha, 'Month') AS mes, SUM(total) AS ingresos " +
                         "FROM ventas WHERE EXTRACT(YEAR FROM fecha) = ? " +
                         "GROUP BY mes, DATE_PART('month', fecha) ORDER BY DATE_PART('month', fecha)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(anioSeleccionado));
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String mes = rs.getString("mes").trim();
                double ingresos = rs.getDouble("ingresos");
                dataset.addValue(ingresos, "Ingresos", mes);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al obtener datos: " + e.getMessage());
        }
        return dataset;
    }

    private double obtenerTotalGeneral(String anioSeleccionado) {
        double total = 0;
        try (Connection conn = ConexionBD.getConexion()) {
            String sql = "SELECT SUM(total) AS total_ingresos FROM ventas WHERE EXTRACT(YEAR FROM fecha) = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(anioSeleccionado));
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                total = rs.getDouble("total_ingresos");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al obtener total: " + e.getMessage());
        }
        return total;
    }

    private void cargarAnios() {
        try (Connection conn = ConexionBD.getConexion()) {
            String sql = "SELECT DISTINCT EXTRACT(YEAR FROM fecha) AS anio FROM ventas ORDER BY anio DESC";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            cmbAnios.removeAllItems();
            while (rs.next()) {
                int anio = rs.getInt("anio");
                cmbAnios.addItem(String.valueOf(anio));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar a√±os: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        panelControles = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        lblTotalIngresos = new javax.swing.JLabel();
        cmbAnios = new javax.swing.JComboBox<>();
        panelGrafica = new javax.swing.JPanel();

        jLabel8.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/login/imagenes/b6.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelControles.setMaximumSize(new java.awt.Dimension(400, 100));
        panelControles.setMinimumSize(new java.awt.Dimension(400, 100));
        panelControles.setPreferredSize(new java.awt.Dimension(400, 100));

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cmbAnios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2025" }));

        javax.swing.GroupLayout panelControlesLayout = new javax.swing.GroupLayout(panelControles);
        panelControles.setLayout(panelControlesLayout);
        panelControlesLayout.setHorizontalGroup(
            panelControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlesLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblTotalIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbAnios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        panelControlesLayout.setVerticalGroup(
            panelControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbAnios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        getContentPane().add(panelControles, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 420, 40));

        panelGrafica.setMaximumSize(new java.awt.Dimension(500, 300));
        panelGrafica.setMinimumSize(new java.awt.Dimension(500, 300));
        panelGrafica.setPreferredSize(new java.awt.Dimension(500, 300));

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(panelGrafica, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 400, 190));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          ReportesEstadisticas v= new ReportesEstadisticas();
         v.setVisible(true);
         this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteFinanzas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteFinanzas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteFinanzas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteFinanzas1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReporteFinanzas1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbAnios;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblTotalIngresos;
    private javax.swing.JPanel panelControles;
    private javax.swing.JPanel panelGrafica;
    // End of variables declaration//GEN-END:variables
}
